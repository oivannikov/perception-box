{"version":3,"sources":["redux/types.js","redux/characterReducer.js","components/Loader/Loader.jsx","api/characters.js","components/Character/Character.jsx","redux/actions.js","components/ListLikedCharacter/ListLikedCharacter.jsx","components/ListCharacter/ListCharacter.jsx","components/Utils/Utils.js","components/Pages/PageCharacters/PageCharacters.jsx","components/Hooks/debouncedSearch.js","components/Pages/PageCurrentCharacter/PageCurrentCharacter.jsx","components/Modal/Modal.jsx","components/SignInFacebook/SignInFacebook.jsx","components/SignIn/SignIn.jsx","App.js","reportWebVitals.js","index.js"],"names":["SET_CHARACTERS","SET_CURRENT_CHARACTER","SET_CHARACTERS_FROM_FIELD","UPDATE_CHARACTERS","SET_HOMEWORLD","initialState","characters","currentCharacter","authUser","charactersFromField","homeworld","updateCharacters","id","updatedIndex","findIndex","character","updatedCharacter","slice","liked","Loader","CircularProgress","className","disableShrink","BASE_URL","a","axios","get","response","data","result","results","console","log","param","cancelation","CancelToken","cancelToken","characterId","urlHomeworld","name","urlFilm","title","useStyles","makeStyles","theme","media","height","paddingTop","expand","fontSize","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","blue","width","Character","onFavorite","classes","history","useHistory","home","useSelector","state","dispatch","useDispatch","gender","useEffect","getHomeworldCharacter","then","type","payload","setHomeworld","Card","CardHeader","Avatar","aria-label","Typography","variant","component","CardActions","disableSpacing","IconButton","onClick","classNames","clsx","push","ListLikedCharacter","likedCharacters","filter","length","map","ListCharacter","charactersWithId","favorites","localStorage","getItem","JSON","parse","url","split","includes","PageCharacters","useState","isLoading","setLoading","searchTerm","setSearchTerm","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","getCharacters","setCharacters","cancel","getCharactersFromField","c","setCharactersFromField","Autocomplete","options","getOptionLabel","option","renderOption","style","handleCharacterClick","renderInput","params","TextField","label","onChange","target","updatedFavorites","setItem","stringify","updateFavoritesStorage","setUpdatedCharacters","PageCurrentCharacter","useParams","nameFilms","setNameFilms","Object","keys","mass","hair_color","skin_color","eye_color","birth_year","films","getCurrentCharacter","setCurrentCharacter","filmRequest","film","getFilmsCharacter","Promise","all","join","Modal","children","SignInFacebook","onRigist","onPageCharacters","appId","autoLoad","fields","callback","status","responseFacebook","SignIn","signInLogin","setSignInLogin","signInPassword","setSignInPassword","placeholder","required","App","isRegist","setIsRegist","isPage","setPageCharacters","path","exact","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6ae7f1c.chunk.js","sourcesContent":["export const SET_CHARACTERS = 'SET_CHARACTERS';\nexport const SET_CURRENT_CHARACTER = 'SET_CURRENT_CHARACTER';\nexport const SET_CHARACTERS_FROM_FIELD = 'SET_CHARACTERS_FROM_FIELD';\nexport const UPDATE_CHARACTERS = 'UPDATE_CHARACTERS';\nexport const SET_HOMEWORLD = 'SET_HOMEWORLD';","import { SET_CHARACTERS, SET_CHARACTERS_FROM_FIELD, SET_CURRENT_CHARACTER, SET_HOMEWORLD, UPDATE_CHARACTERS } from \"./types\";\n\nconst initialState = {\n  characters: [],\n  currentCharacter: {},\n  authUser: false,\n  charactersFromField: [],\n  homeworld: {},\n}\n\nfunction updateCharacters(characters, id) {\n  const updatedIndex = characters.findIndex(character => character.id === id);\n  \n  const updatedCharacter = characters[updatedIndex];\n\n  return [...characters.slice(0, updatedIndex), {...updatedCharacter, liked: !updatedCharacter.liked}, ...characters.slice(updatedIndex + 1)];\n}\n\nexport const characterReducer = (state= initialState, action) => {\n  switch(action.type) {\n    case SET_CHARACTERS:\n      return {\n        ...state,\n        characters: action.payload,\n      }\n\n    case SET_CHARACTERS_FROM_FIELD:\n      return {\n        ...state,\n        charactersFromField: action.payload,\n    }\n\n    case SET_CURRENT_CHARACTER:\n      return {\n        ...state,\n        currentCharacter: action.payload,\n      }\n\n    case UPDATE_CHARACTERS:\n      return {\n        ...state,\n        characters: updateCharacters(state.characters, action.id),\n      }\n    \n    case SET_HOMEWORLD:\n      return {\n        ...state,\n        homeworld: {...state.homeworld, ...action.payload},\n      }\n    \n\n    default: return state;\n  }\n}\n\n","import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Loader.scss';\n\nexport function Loader() {\n  return <CircularProgress className=\"loader\" disableShrink />;\n}\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://swapi.dev/api\";\n\nexport async function getCharacters() {\n  const response = await axios.get(`${BASE_URL}/people/`);\n  const result = await response.data;\n  const characters = await result.results;\n\n  console.log(characters);\n  return characters;\n}\n\nexport async function getCharactersFromField(param, cancelation) {\n  const CancelToken = axios.CancelToken;\n\n  const response = await axios.get(`${BASE_URL}/people/?search=${param}`, {\n    cancelToken: new CancelToken(cancelation),\n  });\n\n  const result = response.data;\n  const characters = result.results;\n\n  return characters;\n}\n\nexport async function getCurrentCharacter(characterId) {\n  const response = await axios.get(`${BASE_URL}/people/${characterId}`);\n  const character = await response.data;\n  \n  return character;\n}\n\nexport async function getHomeworldCharacter(urlHomeworld) {\n  const response = await axios.get(`${urlHomeworld}`);\n  const result = await response.data;\n\n  return result.name;\n}\n\nexport async function getFilmsCharacter(urlFilm) {\n  const response = await axios.get(`${urlFilm}`);\n  const result = await response.data;\n  \n  return result.title;\n}","import React, { useEffect } from 'react';\n\nimport classNames from 'classnames';\n// import PropTypes from 'prop-types';\n\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setHomeworld } from '../../redux/actions';\nimport { getHomeworldCharacter } from '../../api/characters';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport './Character.scss';\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n\n  expand: {\n    fontSize: 18,\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n\n  avatar: {\n    backgroundColor: blue[500],\n    height: 60,\n    width: 60,\n    fontSize: 30,\n  },\n}));\nexport default function Character({ character, onFavorite }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const home = useSelector(state => state.homeworld);\n  const dispatch = useDispatch();\n\n  const { name, id, liked, gender, homeworld } = character;\n\n  const handleCharacterClick = () => {\n    history.push(`/characters/${id}`);\n  };\n\n  useEffect(() => {\n    getHomeworldCharacter(homeworld)\n      .then(result => dispatch(setHomeworld({[id]: result})));\n  }, [character, dispatch, homeworld, id])\n\n  return (\n    <Card className=\"card\">\n      <CardHeader\n        className=\"card__header\"\n        avatar={\n          <>\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              { name && name[0] }\n            </Avatar>\n\n            <Typography className=\"card__name\" variant=\"body2\" component=\"span\">\n              <br />{ name }\n              <br /> From: { home[id] }\n              <br /> Gender: { gender }\n            </Typography>\n          </>\n        }\n      />\n\n      <CardActions className=\"card__footer\" disableSpacing>\n        <IconButton aria-label=\"add to favorites\" onClick={() => onFavorite(id)}>\n          <FavoriteIcon className={classNames('card__favorite', { \"card__liked\": liked })} />\n        </IconButton>\n\n        <IconButton className={clsx(classes.expand)} onClick={handleCharacterClick}>More</IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n\n// Character.propTypes = {\n//   onFavorite: PropTypes.func.isRequired,\n//   character: PropTypes.object({\n//     name: PropTypes.string.isRequired,\n//     id: PropTypes.number.isRequired,\n//     liked: PropTypes.bool.isRequired,\n//     gender: PropTypes.string.isRequired,\n//     homeworld: PropTypes.string.isRequired,\n//   }),\n// }\n","import {\n  SET_CHARACTERS,\n  SET_CHARACTERS_FROM_FIELD,\n  SET_CURRENT_CHARACTER,\n  SET_HOMEWORLD,\n  UPDATE_CHARACTERS\n} from \"./types\";\n\nexport function setCharacters(characters) {\n  return {\n    type: SET_CHARACTERS,\n    payload: characters,\n  }\n}\n\nexport function setCharactersFromField(characters) {\n  return {\n    type: SET_CHARACTERS_FROM_FIELD,\n    payload: characters,\n  }\n}\n\nexport function setCurrentCharacter(character) {\n  return {\n    type: SET_CURRENT_CHARACTER,\n    payload: character,\n  }\n}\n\nexport function setUpdatedCharacters(id) {\n  return {\n    type: UPDATE_CHARACTERS,\n    id,\n  }\n}\n\nexport function setHomeworld(homeworld) {\n  return {\n    type: SET_HOMEWORLD,\n    payload: homeworld,\n  }\n}\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux';\n\nimport Character from '../Character/Character';\nexport function ListLikedCharacter({  onFavorite }) {\n  const characters = useSelector(state => state.characters);\n  const likedCharacters =  characters.filter(({ liked }) => liked);\n\n  return (\n    <>\n      { likedCharacters.length !== 0 && <h1>Liked characters</h1> }\n\n      <div className=\"listCharacter\">\n      {\n       likedCharacters.map(character => (\n          <Character\n            className=\"listCharacter__character\"\n            character={character}\n            onFavorite={onFavorite}\n            key={character.id}\n          />\n        ))\n      }\n      </div>\n    </>\n  );\n}\n\nListLikedCharacter.propTypes = {\n  onFavorite: PropTypes.func.isRequired,\n}\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux';\n\nimport { ListLikedCharacter } from '../ListLikedCharacter/ListLikedCharacter';\nimport Character from '../Character/Character';\n\nimport './ListCharacter.scss';\n\nexport function ListCharacter({ onFavorite }) {\n  const characters = useSelector(state => state.characters);\n\n  return (\n    <>\n      <div className=\"listCharacter\">\n      {\n        characters.map(character => (\n          <Character\n            className=\"listCharacter__character\"\n            character={character}\n            onFavorite={onFavorite}\n            key={character.id}\n          />\n        ))\n      }\n      </div>\n\n      <ListLikedCharacter  onFavorite={onFavorite} />\n    </>\n  );\n}\n\nListCharacter.propTypes = {\n  onFavorite: PropTypes.func.isRequired,\n}","export function charactersWithId(characters) {\n  const favorites = localStorage.getItem('favorites');\n  const likedCharacters = favorites ? JSON.parse(favorites) : [];\n\n  return characters.map(character => {\n    const id = character.url.split('/').slice(-2, -1)[0];\n\n    return ({\n      ...character,\n      liked: likedCharacters.includes(id),\n      id,\n    })\n  });\n}\n\nexport function updateFavoritesStorage(id) {\n  const favorites = localStorage.getItem('favorites');\n  const likedCharacters = favorites ? JSON.parse(favorites) : [];\n  let updatedFavorites;\n \n  if (likedCharacters.includes(id)) {\n    updatedFavorites = likedCharacters.filter(characterId => characterId !== id);\n  } else {\n    updatedFavorites = [...likedCharacters, id];\n  }\n\n  localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n}\n","import { useState, useEffect } from 'react';\n\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Loader } from '../../Loader/Loader';\nimport { ListCharacter } from '../../ListCharacter/ListCharacter';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { getCharacters, getCharactersFromField } from '../../../api/characters';\nimport { setCharacters, setCharactersFromField, setUpdatedCharacters } from '../../../redux/actions';\nimport { charactersWithId, updateFavoritesStorage } from '../../Utils/Utils';\nimport { useDebounce } from '../../Hooks/debouncedSearch';\n\nimport './PageCharacters.scss';\n\nexport function PageCharacters() {\n  const charactersFromField = useSelector(state => state.charactersFromField);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [isLoading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getCharacters()\n      .then(result => {\n        const characters = charactersWithId(result);\n\n        dispatch(setCharacters(characters));\n        setLoading(false);\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    let cancel;\n\n    const cancelation = (c) => {\n      cancel = c;\n    }\n\n    if (debouncedSearchTerm) {\n      getCharactersFromField(debouncedSearchTerm, cancelation)\n        .then(result => {\n          const characters = charactersWithId(result);\n\n          dispatch(setCharactersFromField(characters));\n        });\n    }\n\n    return () => {\n      cancel && cancel();\n    }\n\n    }, [debouncedSearchTerm]);\n\n    const handleCharacterClick = ({ id }) => {\n      history.push(`/characters/${id}`);\n    };\n\n    function handleFavorite(id) {\n      updateFavoritesStorage(id);\n      dispatch(setUpdatedCharacters(id));\n    }\n\n  return (\n    <>\n      <Autocomplete\n        className=\"app__autocomplete\"\n        options={charactersFromField || []}\n        getOptionLabel={(option) => option.name}\n        renderOption={(option) => <div style={{width: \"100%\"}} onClick={() => handleCharacterClick(option)}>{option.name}</div>}\n        renderInput={(params) =>\n          <TextField\n            {...params}\n            className=\"app__field\"\n            label=\"Searching\"\n            variant=\"outlined\"\n            value={searchTerm}\n            onChange={({ target }) => setSearchTerm(target.value)}\n          /> }\n      />\n\n      { isLoading ? <Loader /> : <ListCharacter onFavorite={handleFavorite} /> }\n    </>\n  );\n}\n","// Hook\nimport { useState, useEffect } from 'react';\n\nexport function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}","import React, { useEffect, useState } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setCurrentCharacter } from '../../../redux/actions';\nimport { getCurrentCharacter, getFilmsCharacter } from '../../../api/characters';\n\nimport { Loader } from '../../Loader/Loader';\n\nimport './PageCurrentCharacter.scss';\n\nexport function PageCurrentCharacter() {\n  const { characterId } = useParams();\n  const character = useSelector(state => state.currentCharacter);\n  const homeworld = useSelector(state => state.homeworld);\n  const dispatch = useDispatch();\n\n  const [isLoading, setLoading] = useState(false);\n  const [nameFilms, setNameFilms] = useState([]);\n\n  const id = Object.keys(character).length && character.url.split('/').slice(-2, -1)[0];\n  const { name, height, mass, hair_color, skin_color, eye_color, birth_year,  gender, films } = character;\n\n  useEffect(() => {\n    setLoading(true);\n\n    getCurrentCharacter(characterId)\n      .then(character => {\n        dispatch(setCurrentCharacter(character));\n        setLoading(false);\n      });\n\n  }, [characterId]);\n\n  useEffect(() => {\n    let filmRequest = (films || []).map(film => getFilmsCharacter(film));\n    \n    Promise.all(filmRequest)\n      .then(result => setNameFilms(result));\n\n  }, [character]);\n\n  return (\n    <>\n      { isLoading\n        ? <Loader />\n        : (\n            <div className=\"characterInfo\">\n              <div className=\"characterInfo__wrapper\">\n                <h2 className=\"characterInfo__name\">{ name }</h2>\n\n                <ul className=\"characterInfo__parametrs\">\n                  <li className=\"characterInfo__parametr\">\n                    Height: {height}\n                  </li>\n\n                  <li className=\"characterInfo__parametr\">\n                    Mass: {mass}\n                  </li>\n\n                  <li className=\"characterInfo__parametr\">\n                    Hair color: {hair_color}\n                  </li>\n\n                  <li className=\"characterInfo__parametr\">\n                    Skin color: {skin_color}\n                  </li>\n\n                  <li className=\"characterInfo__parametr\">\n                    Eye color: {eye_color}\n                  </li>\n\n                  <li className=\"characterInfo__parametr\">\n                    Birth year: {birth_year}\n                  </li>\n\n                  <li className=\"characterInfo__parametr\">\n                    Gender: {gender}\n                  </li>\n\n                  <li className=\"characterInfo__parametr\">\n                    Homeworld: {homeworld[id]}\n                  </li>\n\n                  <li className=\"characterInfo__parametr\">\n                    Films: {nameFilms.join(', ')}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          )\n      }\n    </>\n  );\n}\n","import React from 'react';\n\nimport './Modal.scss';\n\nexport function Modal({ children }) {\n  return (\n    <div className=\"modal active\">\n      <div className=\"modal__content active\">\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { useHistory } from 'react-router-dom';\n\nimport FacebookLogin from 'react-facebook-login';\n\nimport './SignInFacebook.scss';\n\nexport function SignInFacebook({ onRigist, onPageCharacters }) {\n  const history = useHistory();\n\n  function responseFacebook(response) {\n    if (response.status !== 'unknown') {\n      history.push('/');\n      onPageCharacters(true);\n    } else {\n      onRigist(true);\n    }\n  }\n\n  return (\n    <>\n      <FacebookLogin\n         appId=\"203258351346646\"\n         autoLoad={false}\n         fields=\"name,email\"\n         onClick={() => onRigist(false)}\n         callback={(response) => responseFacebook(response)}\n      />\n    </>\n  );\n}","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { SignInFacebook } from '../SignInFacebook/SignInFacebook';\n\nimport './SignIn.scss';\n\nexport function SignIn({ onRigist, onPageCharacters }) {\n  const [signInLogin, setSignInLogin] = useState('');\n  const [signInPassword, setSignInPassword] = useState('');\n\n  return (\n    <form className=\"form\">\n      <div className=\"form__authorization\">\n        <div className=\"form__login\">\n          <input\n            className=\"form__input\"\n            type=\"email\"\n            placeholder=\"Login\"\n            value={signInLogin}\n            onChange={({ target }) => setSignInLogin(target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form__password\">\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={signInPassword}\n            onChange={({ target }) => setSignInPassword(target.value)}\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"form__buttons\">\n        <div className=\"form__button\">\n          <button className=\"form__sign-in\" type=\"sumbit\">Sign in</button>\n        </div>\n        \n        <SignInFacebook onRigist={onRigist} onPageCharacters={onPageCharacters} />\n      </div>\n    </form>\n  );\n}\n\nSignIn.propTypes = {\n  onRigist: PropTypes.func.isRequired,\n  onPageCharacters: PropTypes.func.isRequired\n}","import { useState } from 'react';\n\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\n\nimport { PageCharacters } from './components/Pages/PageCharacters/PageCharacters';\nimport { PageCurrentCharacter } from './components/Pages/PageCurrentCharacter/PageCurrentCharacter';\nimport { Modal } from './components/Modal/Modal';\nimport { SignIn } from './components/SignIn/SignIn';\n\nimport './App.scss';\n\nfunction App() {\n  const [isRegist, setIsRegist] = useState(true);\n  const [isPage, setPageCharacters] = useState(false);\n  const history = useHistory();\n\n  if (isRegist) {\n    history.push('/');\n  }\n\n  return (\n    <div className=\"app\">\n    { isPage\n        ? (  <Switch>\n              <Route path=\"/\" exact>\n                <Redirect to=\"/characters/\" />\n              </Route>\n\n              <Route path=\"/characters/\" component={PageCharacters} exact />\n              <Route path=\"/characters/:characterId\" component={PageCurrentCharacter} />\n            </Switch>\n          )\n        : isRegist && <Modal> <SignIn onRigist={setIsRegist} onPageCharacters={setPageCharacters} /></Modal>\n    }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { characterReducer } from './redux/characterReducer';\n\nimport App from './App';\n\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(characterReducer);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}